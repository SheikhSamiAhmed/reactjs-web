name: "CodeQL React Static Analysis"

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  schedule:
    - cron: '44 22 * * 5'  # Weekly scan (every Friday)

jobs:
  analyze:
    name: Analyze React Code (JavaScript/TypeScript)
    runs-on: ubuntu-latest
    permissions:
      security-events: write
      packages: read
      actions: read
      contents: read

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: 20

    - name: Initialize CodeQL
      uses: github/codeql-action/init@v3
      with:
        languages: javascript-typescript
        build-mode: none
        queries: +security-extended  # Use default extended security rules

    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v3
      with:
        output: results.sarif

    - name: Upload SARIF report as artifact
      uses: actions/upload-artifact@v4
      with:
        name: codeql-report
        path: results.sarif

    - name: Check Pass Percentage & Enforce Threshold
      run: |
        if ! command -v jq &> /dev/null; then
          echo "jq not found. Installing jq..."
          sudo apt-get update && sudo apt-get install -y jq
        fi

        issues=$(jq '.runs[].results | length' results.sarif)
        echo "Total issues found: $issues"

        # For simplicity, we consider "0 issues = 100% pass"
        if [ "$issues" -eq 0 ]; then
          echo "100% pass. No issues found."
          exit 0
        fi

        total_checks=100  # You can estimate or refine this value if needed
        passed=$(( total_checks - issues ))
        pass_percentage=$(echo "scale=2; $passed * 100 / $total_checks" | bc)
        echo "Pass percentage: $pass_percentage%"

        if (( $(echo "$pass_percentage < 80" | bc -l) )); then
          echo "❌ CodeQL scan failed (threshold: 80%)."
          exit 1
        else
          echo "✅ CodeQL scan passed (≥80%)."
        fi
